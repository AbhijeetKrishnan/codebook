{
	// Place your codebook workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"C++ Code Template": {
		"scope": "cpp",
		"prefix": "cpcpp",
		"body": [
            "#include <iostream>",
            "#include <vector>",
            "#include <map>",
            "#include <unordered_map>",
            "#include <algorithm>",
            "#include <climits>",
			"",
			"using namespace std;",
			"",
			"int modular_pow(int base, int exponent, int modulus) {",
			"    if (modulus == 1) {",
			"        return 0;",
			"    }",
			"    int result = 1;",
			"    base = base % modulus;",
			"    while (exponent > 0) {",
			"        if (exponent % 2 == 1) {",
			"            result = ((long long int)result * base) % modulus;",
			"        }",
			"        exponent >>= 1;",
			"        base = ((long long int)base * base) % modulus;",
			"    }",
			"    return result;",
			"}",
			"",
			"int main() {",
			"    $0",
			"    return 0;",
			"}"
		]
	}
}